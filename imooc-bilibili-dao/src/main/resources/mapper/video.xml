<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.imooc.bilibili.dao.VideoDao">
    <insert id="addVideos" parameterType="com.imooc.bilibili.domain.Video" useGeneratedKeys="true" keyProperty="id">
        insert into t_video (
            userId,
            url,
            thumbnail,
            title,
            `type`,
            duration,
            area,
            description,
            createTime
        ) values (
            #{userId},
            #{url},
            #{thumbnail},
            #{title},
            #{type},
            #{duration},
            #{area},
            #{description},
            #{createTime}
        )
    </insert>

    <insert id="batchAddVideoTags" parameterType="java.util.List">
        insert into  t_video_tag (
                videoId,
                tagId,
                createTime
        ) values
        <foreach collection="videoTagList" item="item" separator=",">
            (
                #{item.videoId},
                #{item.tagId},
                #{item.createTime}
            )
        </foreach>
    </insert>

    <select id="pageCountVideos" parameterType="map" resultType="java.lang.Integer">
        select
            COUNT(1)
        from
            t_video
        <where>
            <if test="area != null and area != '' ">
                area = #{area}
            </if>
        </where>
    </select>

    <select id="pageListVideos" parameterType="map" resultType="com.imooc.bilibili.domain.Video">
        select
            *
        from
            t_video
        <where>
            <if test="area != null and area != '' ">
                area = #{area}
            </if>
        </where>
        order by id desc
        limit #{start}, #{limit}
    </select>

    <select id="getVideoId" parameterType="java.lang.Long" resultType="com.imooc.bilibili.domain.Video">
        select
            *
        from
            t_video
        where
            id = #{id};
    </select>

    <select id="getVideoLikeByUserIdAndVideoId" resultType="com.imooc.bilibili.domain.VideoLike">
        select
            *
        from
            t_video_like
        where
            userId = #{userId} and videoId = #{videoId}
    </select>

    <insert id="addVideoLike" parameterType="com.imooc.bilibili.domain.VideoLike">
        insert into t_video_like (
                userId,
                videoId,
                createTime
        ) VALUES (
                #{userId},
                #{videoId},
                #{createTime}
        )
    </insert>

    <delete id="deleteVideoLike">
        delete from
            t_video_like
        where
            userId = #{userId} and videoId = #{videoId}
    </delete>

    <select id="getVideoLikes" resultType="long">
        select
            COUNT(1)
        from
            t_video_like
        where
            videoId = #{videoId}
    </select>
    
    <select id="addVideoCollection" parameterType="com.imooc.bilibili.domain.VideoCollection" resultType="int">
        insert into t_video_collection (
            videoId,
            userId,
            groupId,
            createTime
        ) values (
            #{videoId},
            #{userId},
            #{groupId},
            #{createTime}
        );
    </select>

    <delete id="deleteVideoCollection" parameterType="com.imooc.bilibili.domain.VideoCollection">
        delete from
            t_video_collection
        where
            videoId = #{videoId}
            and userId = #{userId}
    </delete>

    <select id="getVideoById" parameterType="long" resultType="com.imooc.bilibili.domain.Video">
        select
            *
        from
            t_video
        where
            id = #{id}
    </select>

    <select id="getVideoCollections" resultType="long">
        select
            count(1)
        from
            t_video_collection
        where
            videoId = #{videoId}
    </select>

    <select id="getVideoCollectionByVideoIdAndUserId" resultType="com.imooc.bilibili.domain.VideoCollection">
        select
            *
        from
            t_video_collection
        where
            videoId = #{videoId} and userId = #{userId}
    </select>

    <select id="getVideoCoinByVideoIdAndUserId" resultType="com.imooc.bilibili.domain.VideoCoin">
        select
            *
        from
            t_video_coin
        where
            videoId = #{videoId} and userId = #{userId}
    </select>

    <insert id="addVideoCoin" parameterType="com.imooc.bilibili.domain.VideoCoin">
        insert into t_video_coin (
            userId,
            videoId,
            amount,
            createTime
        ) values (
            #{userId},
            #{videoId},
            #{amount},
            #{createTime}
        )
    </insert>

    <update id="updateVideoCoin" parameterType="com.imooc.bilibili.domain.VideoCoin">
        update
            t_video_coin
        set
            amount = #{amount},
            updateTime = #{updateTime}
        where
            videoId = #{videoId} and userId= #{userId}
    </update>

    <select id="getVideoCoins" resultType="long">
        select
            sum(amount)
        from
            t_video_coin
        where
            videoId = #{videoId}
    </select>
</mapper>