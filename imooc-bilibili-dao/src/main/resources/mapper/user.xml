<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.imooc.bilibili.dao.UserDao">
    <select id="getUserByPhone" parameterType="java.lang.String" resultType="com.imooc.bilibili.domain.User">
        select
            *
        from
            t_user
        where
            phone = #{phone}
    </select>

    <insert id="addUser" parameterType="com.imooc.bilibili.domain.User" useGeneratedKeys="true" keyProperty="id">
        insert into t_user(
           phone, email, password, salt, createTime
        )
        values (
            #{phone}, #{email}, #{password}, #{salt}, #{createTime}
        )
    </insert>

    <insert id="addUserInfo" parameterType="com.imooc.bilibili.domain.User" useGeneratedKeys="true" keyProperty="id">
        insert into t_user_info(
            userId, nick, avatar, sign, gender, birth, createTime
        )
        values (
            #{userId}, #{nick}, #{avatar}, #{sign}, #{gender}, #{birth}, #{createTime}
        )
    </insert>
    
    <select id="getUserById" parameterType="java.lang.Long" resultType="com.imooc.bilibili.domain.User">
        select
            *
        from
            t_user
        where
            id = #{id}

    </select>

    <select id="getUserInfoByUserId" parameterType="java.lang.Long" resultType="com.imooc.bilibili.domain.UserInfo">
        select
            *
        from
            t_user_info
        where
            userId = #{userId}

    </select>

    <update id="updateUserByPrimaryKeySelective" parameterType="com.imooc.bilibili.domain.User">
        update t_user
        <set>
            <if test="phone != null and phone != '' ">
                phone = #{phone},
            </if>
            <if test="email != null and email != '' ">
                email = #{email},
            </if>
            <if test="password != null and password != '' ">
                password = #{password},
            </if>
            <if test="updateTime != null">
                updateTime = #{updateTime},
            </if>
        </set>
        where id = #{id}
    </update>

    <update id="updateUserInfo" parameterType="com.imooc.bilibili.domain.UserInfo">
        update t_user_info
        <set>
            <if test="nick != null and nick != '' ">
                nick = #{nick},
            </if>
            <if test="avatar != null">
                avatar = #{avatar},
            </if>
            <if test="sign != null">
                sign = #{sign},
            </if>
            <if test="birth != null and birth != '' ">
                birth = #{birth},
            </if>
            <if test="gender != null and gender != '' ">
                gender = #{gender},
            </if>
            <if test="updateTime != null">
                updateTime = #{updateTime},
            </if>
        </set>
        where userId = #{userId}
    </update>
    
    <select id="getUserInfoByUserIds" resultType="com.imooc.bilibili.domain.UserInfo">
        select
            *
        from
            t_user_info
        <where>
            <if test="userIdSet != null and userIdSet.size > 0">
                userId in
                <foreach collection="userIdSet" item="userId" index="index" open="(" close=")" separator=",">
                    #{userId}
                </foreach>
            </if>
        </where>
    </select>

    <select id="pageCountUserInfos" parameterType="java.util.Map" resultType="java.lang.Integer">
        select
            count(1)
        from
            t_user_info
        <where>
            <if test="nick != null and nick != '' ">
                nick like '%${nick}%'
            </if>
        </where>
    </select>

    <select id="pageListUserInfos" parameterType="java.util.Map" resultType="com.imooc.bilibili.domain.UserInfo">
        select
            *
        from
            t_user_info
        <where>
            <if test="nick != null and nick != '' ">
                nick like '%${nick}%'
            </if>
        </where>
        order by id desc
        limit #{start},#{size}
    </select>

    <delete id="deleteRefreshToken">
        delete from
                t_refresh_token
        where refreshToken = #{refreshToken}
    </delete>

    <insert id="addRefreshToken">
        insert into t_refresh_token (
            refreshToken,
            userId,
            createTime
        ) values (
            #{refreshToken},
            #{userId},
            #{createTime}
        )
    </insert>


</mapper>